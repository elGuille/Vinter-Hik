//
//  VinterCam.swift
//  Vinter
//
//  Created by Guillermo GarcÃ­a on 28/07/16.
//  Copyright Â© 2016 Vinter. All rights reserved.
//

import AVFoundation
import UIKit

class VinterCam { // This class records videos

    enum StatusðŸ…” { case recording, stopped }
    var statusðŸ…”: StatusðŸ…” = .stopped
    weak var delegateâ“„: AVCaptureFileOutputRecordingDelegate?
    let videoFileName$: String
    var atStartâ“‘ = false
    var atEndâ“‘ = false
    var filePath$: String { return "\(appPath$)/\(videoFileName$).mp4" }
    
    var captureSession: AVCaptureSession?
    let fileOutputâ“„ = AVCaptureMovieFileOutput()
    
    init(superViewâ“„ view: UIView, recDelegateâ“„: AVCaptureFileOutputRecordingDelegate, videoFileName$: String) {
        delegateâ“„ = recDelegateâ“„
        self.videoFileName$ = videoFileName$
        let captureSessionâ“„ = AVCaptureSession()
        let videoDeviceâ“„ = AVCaptureDevice.defaultDevice(withMediaType: AVMediaTypeVideo)
        let audioDeviceâ“„ = AVCaptureDevice.defaultDevice(withMediaType: AVMediaTypeAudio)
        let videoInputâ“„ = try! AVCaptureDeviceInput(device: videoDeviceâ“„) //as AVCaptureDeviceInput
        captureSessionâ“„.addInput(videoInputâ“„)
        let audioInput = try! AVCaptureDeviceInput(device: audioDeviceâ“„) as AVCaptureInput
        captureSessionâ“„.addInput(audioInput)
        captureSessionâ“„.addOutput(fileOutputâ“„)
        let videoLayerâ“„ = AVCaptureVideoPreviewLayer(session: captureSessionâ“„) //as AVCaptureVideoPreviewLayer
        videoLayerâ“„?.videoGravity = AVLayerVideoGravityResizeAspectFill
        videoLayerâ“„?.frame = view.bounds
        view.layer.insertSublayer(videoLayerâ“„!, at: 0)
        captureSessionâ“„.startRunning()
    }
    
    func rec() {
        statusðŸ…” = .recording
        let fileURL = URL(fileURLWithPath: filePath$)
        fileOutputâ“„.startRecording(toOutputFileURL: fileURL, recordingDelegate: delegateâ“„)
        print("RECORDING...")
    }
    
    func stop() {
        statusðŸ…” = .stopped
        fileOutputâ“„.stopRecording()
        print("STOPPED!")
    }
    

    
    //   deinit { captureSession!.stopRunning()
    
}






